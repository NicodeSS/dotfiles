#!/bin/bash
{{- if or (eq .chezmoi.os "linux") (eq .chezmoi.os "darwin") }}

# Color definitions
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

OS="{{ .chezmoi.os }}"
CURRENT_SHELL=$(basename "$SHELL")
ZSH_PATH=""

echo -e "${BLUE}Setting up zsh as default shell...${NC}"
echo "Current OS: $OS"
echo "Current shell: $CURRENT_SHELL"

# Function to find zsh path
find_zsh_path() {
    # Try common zsh locations
    local zsh_locations=(
        "/bin/zsh"
        "/usr/bin/zsh"
        "/usr/local/bin/zsh"
        "/opt/homebrew/bin/zsh"
    )
    
    for path in "${zsh_locations[@]}"; do
        if [ -x "$path" ]; then
            ZSH_PATH="$path"
            echo "Found zsh at: $ZSH_PATH"
            return 0
        fi
    done
    
    # Try using which command
    if command -v zsh &> /dev/null; then
        ZSH_PATH=$(which zsh)
        echo "Found zsh at: $ZSH_PATH"
        return 0
    fi
    
    return 1
}

# Function to add zsh to /etc/shells if not present
add_zsh_to_shells() {
    if [ ! -f /etc/shells ]; then
        echo -e "${YELLOW}Warning: /etc/shells not found${NC}"
        return 1
    fi
    
    if ! grep -q "^$ZSH_PATH$" /etc/shells; then
        echo "Adding $ZSH_PATH to /etc/shells"
        if [ "$OS" = "darwin" ]; then
            # macOS: Use sudo to add to /etc/shells
            echo "$ZSH_PATH" | sudo tee -a /etc/shells > /dev/null
        else
            # Linux: Try to add to /etc/shells
            if [ -w /etc/shells ]; then
                echo "$ZSH_PATH" >> /etc/shells
            else
                echo "$ZSH_PATH" | sudo tee -a /etc/shells > /dev/null
            fi
        fi
        echo -e "${GREEN}Added $ZSH_PATH to /etc/shells${NC}"
    else
        echo "zsh is already in /etc/shells"
    fi
}

# Function to change default shell
change_default_shell() {
    local current_user=$(whoami)
    local current_user_shell=$(getent passwd "$current_user" 2>/dev/null | cut -d: -f7)
    
    if [ -z "$current_user_shell" ] && [ "$OS" = "darwin" ]; then
        # macOS fallback
        current_user_shell=$(dscl . -read /Users/"$current_user" UserShell 2>/dev/null | awk '{print $2}')
    fi
    
    echo "Current user: $current_user"
    echo "Current user shell: $current_user_shell"
    
    if [ "$current_user_shell" = "$ZSH_PATH" ]; then
        echo -e "${GREEN}Default shell is already set to zsh${NC}"
        return 0
    fi
    
    echo "Changing default shell to zsh..."
    
    if [ "$OS" = "darwin" ]; then
        # macOS: Use chsh or dscl
        if command -v chsh &> /dev/null; then
            chsh -s "$ZSH_PATH" || {
                echo -e "${YELLOW}chsh failed, trying dscl...${NC}"
                sudo dscl . -change /Users/"$current_user" UserShell "$current_user_shell" "$ZSH_PATH"
            }
        else
            sudo dscl . -change /Users/"$current_user" UserShell "$current_user_shell" "$ZSH_PATH"
        fi
    else
        # Linux: Use chsh
        if command -v chsh &> /dev/null; then
            chsh -s "$ZSH_PATH" || {
                echo -e "${YELLOW}chsh failed, trying usermod...${NC}"
                sudo usermod -s "$ZSH_PATH" "$current_user"
            }
        else
            sudo usermod -s "$ZSH_PATH" "$current_user"
        fi
    fi
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Successfully changed default shell to zsh${NC}"
        echo -e "${YELLOW}Please log out and log back in for the change to take effect${NC}"
    else
        echo -e "${RED}Failed to change default shell${NC}"
        return 1
    fi
}

# Main execution
if [ "$CURRENT_SHELL" = "zsh" ] && [ "$SHELL" = "$(which zsh 2>/dev/null || echo '')" ]; then
    echo -e "${GREEN}zsh is already the default shell${NC}"
    exit 0
fi

# Find zsh
if ! find_zsh_path; then
    echo -e "${RED}Error: zsh not found. Please install zsh first.${NC}"
    exit 1
fi

# Verify zsh is executable
if [ ! -x "$ZSH_PATH" ]; then
    echo -e "${RED}Error: zsh at $ZSH_PATH is not executable${NC}"
    exit 1
fi

# Add zsh to /etc/shells
add_zsh_to_shells

# Change default shell
change_default_shell

echo -e "${GREEN}Default shell setup completed!${NC}"

{{- end }} 